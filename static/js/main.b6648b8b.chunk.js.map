{"version":3,"sources":["components/BrowserTab/BrowserTab.tsx","components/HWTrialAndErrorTab/HWTrialAndErrorTab.tsx","components/TabList/TabList.tsx","components/App/assets/logo512.png","components/App/App.tsx","index.tsx"],"names":["BrowserTab","useState","mnemonic","setMnemonic","finalWords","setFinalWords","className","type","placeholder","value","onChange","event","target","onClick","bip39","english","word","push","console","log","length","alert","join","split","map","HWTrialAndErrorTab","href","rel","tabs","title","component","TabList","selectedTabIndex","setSelectedTabIndex","tab","index","classnames","App","warningAccepted","setWarningAccepted","src","logo","alt","width","height","xmlns","viewBox","d","fill","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6648b8b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport * as bip39 from \"bip39\";\nexport function BrowserTab() {\n  const [mnemonic, setMnemonic] = useState(\"\");\n  const [finalWords, setFinalWords] = useState(\"\");\n  return (\n    <>\n      <ol className=\"list-decimal\">\n        <li>Choose a place away from cameras and prying eyes</li>\n        <li>\n          Access this page on either a device you can wipe, or has a readonly\n          hard disk\n        </li>\n        <li>Turn off your Internet Connection</li>\n        <li>Enter your pre-memorized 11 or 23 BIP-39 seed words</li>\n        <li>Press Generate</li>\n        <li>Choose and memorize one of the words</li>\n        <li>Immediately turn off and wipe your device</li>\n        <li>\n          Enter your seed using <strong>advanced recovery</strong> on a newly\n          flashed hardware wallet.\n        </li>\n        <li>\n          Re-run the advanced recovery to ensure you made no errors in the input\n          of your seed.\n        </li>\n      </ol>\n\n      <div className=\"flex gap-4 w-full justify-center\">\n        <input\n          type=\"text\"\n          placeholder=\"Mnemonic (minus last word)\"\n          className=\"input input-bordered input-primary w-full max-w-md\"\n          value={mnemonic}\n          onChange={(event) => setMnemonic(event.target.value)}\n        />\n        {!mnemonic ? (\n          <button\n            className=\"btn btn-secondary btn-outline\"\n            onClick={() =>\n              setMnemonic(\n                \"abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon\"\n              )\n            }\n          >\n            Use Example\n          </button>\n        ) : (\n          <button\n            className=\"btn\"\n            onClick={() => {\n              const finalWords: string[] = [];\n              for (const word of bip39.wordlists.english) {\n                if (\n                  bip39.validateMnemonic(\n                    mnemonic + \" \" + word,\n                    bip39.wordlists.english\n                  )\n                ) {\n                  finalWords.push(word);\n                } else {\n                  console.log(mnemonic + \" \" + word + \" is invalid\");\n                }\n              }\n              if (!finalWords.length) {\n                alert(\"Invalid seed\");\n              }\n              setFinalWords(finalWords.join(\" \"));\n            }}\n          >\n            Generate\n          </button>\n        )}\n      </div>\n\n      {finalWords.length > 0 && (\n        <div className=\"flex gap-4 flex-wrap\">\n          {finalWords.split(\" \").map((word) => (\n            <span className=\"badge\" key={word}>\n              {word}\n            </span>\n          ))}\n        </div>\n      )}\n    </>\n  );\n}\n","export function HWTrialAndErrorTab() {\n  return (\n    <>\n      <ol className=\"list-decimal\">\n        <li>Choose a place away from cameras and prying eyes</li>\n        <li>\n          Start <strong>advanced recovery</strong> on a newly flashed hardware\n          wallet. Do not use your computer keyboard!\n        </li>\n        <li>Enter your pre-memorized 12 BIP-39 words</li>\n        <li>\n          If your recovery fails, restart the advanced recovery but instead of\n          using the same final word, use the next word down the{\" \"}\n          <a\n            className=\"link\"\n            target=\"_blank\"\n            href=\"https://github.com/bitcoin/bips/blob/master/bip-0039/english.txt\"\n            rel=\"noreferrer\"\n          >\n            list\n          </a>\n          .\n        </li>\n        <li>If your recovery succeeds, you have your final word.</li>\n        <li>\n          Re-run the advanced recovery to ensure you made no errors in the input\n          of your seed.\n        </li>\n      </ol>\n      <p>\n        Maximum attempts required: <span className=\"badge\">16</span> for a 12\n        word phrase, which should be sufficient for advanced recovery (no\n        keyboard input).\n      </p>\n      <p>Estimated time required: 1-2 hours.</p>\n    </>\n  );\n}\n","import classnames from \"classnames\";\nimport { Fragment, useState } from \"react\";\nimport { BrowserTab } from \"../BrowserTab/BrowserTab\";\nimport { HWTrialAndErrorTab } from \"../HWTrialAndErrorTab/HWTrialAndErrorTab\";\n\nconst tabs: { title: string; component: React.ReactNode }[] = [\n  { title: \"BROWSER WIPEABLE\", component: <BrowserTab /> },\n  { title: \"HW TRIAL & ERROR\", component: <HWTrialAndErrorTab /> },\n];\n\nexport function TabList() {\n  const [selectedTabIndex, setSelectedTabIndex] = useState(0);\n\n  return (\n    <>\n      <div className=\"tabs tabs-boxed mb-2\">\n        {tabs.map((tab, index) => (\n          <Fragment key={tab.title}>\n            <button\n              className={classnames([\n                \"tab tab-sm md:tab-md\",\n                { \"tab-active\": index === selectedTabIndex },\n              ])}\n              onClick={() => setSelectedTabIndex(index)}\n            >\n              {tab.title}\n            </button>\n          </Fragment>\n        ))}\n      </div>\n      <div className=\"flex flex-col items-center gap-y-4 w-full px-4\">\n        {tabs[selectedTabIndex].component}\n      </div>\n    </>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo512.1957eecb.png\";","import { useState } from \"react\";\nimport { TabList } from \"../TabList/TabList\";\nimport logo from \"./assets/logo512.png\";\n\nfunction App() {\n  const [warningAccepted, setWarningAccepted] = useState(false);\n  return (\n    <div className=\"flex flex-col items-center p-4\">\n      <a\n        aria-label=\"Github\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href=\"https://github.com/rolznz/memorable-seed\"\n        className=\"flex flex-col justify-center items-center\"\n      >\n        <img src={logo} className=\"w-32\" alt=\"logo\" />\n        <span>Memorable Seed</span>\n      </a>\n      <a\n        aria-label=\"Github\"\n        rel=\"noreferrer\"\n        target=\"_blank\"\n        href=\"https://github.com/rolznz/memorable-seed\"\n        className=\"btn btn-ghost drawer-button btn-square normal-case absolute top-1 right-1\"\n      >\n        <svg\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 512 512\"\n          className=\"inline-block h-8 w-8 fill-current\"\n        >\n          <path d=\"M256,32C132.3,32,32,134.9,32,261.7c0,101.5,64.2,187.5,153.2,217.9a17.56,17.56,0,0,0,3.8.4c8.3,0,11.5-6.1,11.5-11.4,0-5.5-.2-19.9-.3-39.1a102.4,102.4,0,0,1-22.6,2.7c-43.1,0-52.9-33.5-52.9-33.5-10.2-26.5-24.9-33.6-24.9-33.6-19.5-13.7-.1-14.1,1.4-14.1h.1c22.5,2,34.3,23.8,34.3,23.8,11.2,19.6,26.2,25.1,39.6,25.1a63,63,0,0,0,25.6-6c2-14.8,7.8-24.9,14.2-30.7-49.7-5.8-102-25.5-102-113.5,0-25.1,8.7-45.6,23-61.6-2.3-5.8-10-29.2,2.2-60.8a18.64,18.64,0,0,1,5-.5c8.1,0,26.4,3.1,56.6,24.1a208.21,208.21,0,0,1,112.2,0c30.2-21,48.5-24.1,56.6-24.1a18.64,18.64,0,0,1,5,.5c12.2,31.6,4.5,55,2.2,60.8,14.3,16.1,23,36.6,23,61.6,0,88.2-52.4,107.6-102.3,113.3,8,7.1,15.2,21.1,15.2,42.5,0,30.7-.3,55.5-.3,63,0,5.4,3.1,11.5,11.4,11.5a19.35,19.35,0,0,0,4-.4C415.9,449.2,480,363.1,480,261.7,480,134.9,379.7,32,256,32Z\"></path>\n        </svg>\n      </a>\n\n      <div className=\"flex flex-col items-center justify-center my-4\">\n        {!warningAccepted ? (\n          <div className=\"alert shadow-lg\">\n            <div>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                className=\"stroke-info-content flex-shrink-0 w-6 h-6\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n                ></path>\n              </svg>\n              <span>\n                Choosing your own seed is less secure than using a randomly\n                generated seed.\n              </span>\n            </div>\n            <div className=\"flex-none\">\n              <button\n                className=\"btn btn-sm btn-primary\"\n                onClick={() => setWarningAccepted(true)}\n              >\n                I Understand\n              </button>\n            </div>\n          </div>\n        ) : (\n          <TabList />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}